<project name="Symja" basedir="." default="main">
	
	<property file="build.properties"/>
	
	<property name="src.dir"     value="symja-gui\src\main\java"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>

    <property name="main-class"  value="org.matheclipse.symja.Main"/>

    <property name="lib.dir"     value="lib"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    	<!--<fileset dir="${java3d.dir}" includes="**/*.jar"/>-->
    </path>


    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" debug="true" />
    </target>

	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<unjar src="lib/commons-math-2.0.jar" dest="${classes.dir}" />
		<unjar src="lib/meparser-0.0.7.jar" dest="${classes.dir}" />
		<unjar src="lib/mebasic.jar" dest="${classes.dir}" />
		<unjar src="lib/megeneric.jar" dest="${classes.dir}" />
		<unjar src="lib/mecore.jar" dest="${classes.dir}" />
		
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
		    <manifest>
		        <attribute name="Main-Class" value="${main-class}"/>
		    </manifest>
		</jar>
	</target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>
 
	<target name="obfuscate" depends="jar">
	         <taskdef resource="proguard/ant/task.properties"
	                  classpath="toolslib/proguard.jar" />

	         <proguard printmapping="proguard.map"
	                   overloadaggressively="on"
	                   defaultpackage=""
	                   allowaccessmodification="on">
	               -dontskipnonpubliclibraryclasses
	         	-dontskipnonpubliclibraryclassmembers

	           <!-- Specify the input jars, output jars, and library jars. -->

	           <injar  file="${jar.dir}/${ant.project.name}.jar" />
	           <outjar file="${jar.dir}/${ant.project.name}_all001.jar" />
	         	
	           <libraryjar file="${java.home}/lib/rt.jar" />
	           <libraryjar file="${java3d.dir}/j3dcore.jar" />
	           <libraryjar file="${java3d.dir}/j3dutils.jar" />
	           <libraryjar file="${java3d.dir}/vecmath.jar" />
	         	
	               <keep access="public" extends="javax.swing.JApplet" />
	               <keep access="public"
	extends="org.matheclipse.core.interfaces.IEvaluator" />
	               <keep access="public"
	extends="org.matheclipse.core.eval.interfaces.ISymbolEvaluator" />
	               <keep access="public"
	extends="org.matheclipse.core.eval.interfaces.IFunctionEvaluator" />
	               <keep access="public"
	extends="org.matheclipse.core.form.mathml.IConverter" />
	               <keep access="public" extends="org.matheclipse.core.form.tex.IConverter" />

	                <keep access="public" name="${main-class}">
	                     <method access    ="public static"
	                             type      ="void"
	                             name      ="main"
	                             parameters="java.lang.String[]" />
	                </keep>
    	         	<keep access="public" name="org.matheclipse.symja.MathApplet">
	         		                     <method access    ="public static"
	         		                             type      ="void"
	         		                             name      ="main"
	         		                             parameters="java.lang.String[]" />
	        		</keep>
       
	         	
	         </proguard>
	       </target>
</project>

