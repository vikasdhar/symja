#summary Use MathEclipse as a scripting engine (JSR 223).

MathEclipse is usable as a [http://en.wikipedia.org/wiki/JSR_223 JSR 223] scripting engine.


Example:
{{{
...
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;

import javax.script.ScriptContext;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;

import junit.framework.TestCase;

import org.matheclipse.core.eval.SystemNamespace;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.interfaces.IExpr;
import org.matheclipse.script.engine.MathScriptEngine;
public class ScriptEngineTestCase extends TestCase {
	public ScriptEngineTestCase() {
		super("ScriptEngineTestCase");
	}

}}}

Initialize the scripting engine:
{{{

	public void testScriptEngine() {
		String stringResult = null;
		ScriptEngineManager scriptManager = new ScriptEngineManager();
		ScriptEngine engine_1 = scriptManager.getEngineByExtension("m");

}}}

Evaluate a given expression {{{D[Sin[x]*Cos[x],x]}}}:
{{{
		try {
			stringResult = (String) engine_1.eval("D[Sin[x]*Cos[x],x]");
			assertEquals("Cos[x]^2-Sin[x]^2", stringResult);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
}}}

or {{{Expand[(x+5)^3]}}}:
{{{
		try {
			stringResult = (String) engine_1.eval("Expand[(x+5)^3]");
			assertEquals("125+75*x+15*x^2+x^3", stringResult);
			stringResult = (String) engine_1.eval("Factor[" + stringResult
					+ "]");
			assertEquals("(5+x)^3", stringResult);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
}}}