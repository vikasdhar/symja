#summary External libraries used in the Symja project
#sidebar TableOfContents

<wiki:toc max_depth="1" />

= Links to external open source libraries =
  * [http://commons.apache.org/math/ Commons-Math: The Apache Commons Mathematics Library]
  * [http://krum.rz.uni-mannheim.de/jas/ Java Algebra System (JAS)]
  * [http://jeuclid.sourceforge.net/ JEuclid - MathML renderer]

= Commons-Math functions =
The following functions are based on commons-math implementations:
  * {{{Det}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Det.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/FieldLUDecompositionImpl.html LUP-decomposition of a square matrix]
    * {{{Det[{{1,2},{3,4}}] gives -2}}}
  * {{{Eigenvalues}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Eigenvalues.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/EigenDecompositionImpl.html Calculates the eigen decomposition of a symmetric matrix]
    * {{{Eigenvalues[{{1,0,0},{0,1,0},{0,0,1}}] gives {1.0,1.0,1.0}}}}
  * {{{Eigenvectors}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Eigenvectors.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/EigenDecompositionImpl.html Calculates the eigen decomposition of a symmetric matrix]
  * {{{Fit}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Fit.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.html Levenberg-Marquardt optimizer]
    * {{{Fit[{{1,1},{2,4},{3,9},{4,16}},2,x] gives x^2.0}}}
  * {{{FindRoot}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/FindRoot.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.html BisectionSolver, BrentSolver, MullerSolver, NewtonSolver, RiddersSolver, SecantSolver]
    * {{{FindRoot[Exp[x]==Pi^3,{x,-1,10}, Bisection] gives {x->3.434189647436142}}}}
  * {{{Inverse}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Inverse.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/FieldLUDecompositionImpl.html LUP-decomposition of a square matrix]
    * {{{Inverse[{{1,2},{3,4}}] gives {{-2,1},{3/2,-1/2}}}}}
  * {{{LinearSolve}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/LinearSolve.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/FieldLUDecompositionImpl.html LUP-decomposition of a square matrix]
    * {{{LinearSolve[{ { 1/10, 6/5, 1/9 },{ 1, 59/45, 1/10 },{6/5, 1/10, 1/9 } },{ 1/10, 6/5, 1/9 }] gives {99109/101673,10898/11297,-9034/869}}}}
  * {{{LUDecomposition}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/LUDecomposition.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/FieldLUDecompositionImpl.html LUP-decomposition of a square matrix]
    * {{{LUDecomposition[{{1, 2, 3}, {3, 4, 11}, {13, 7, 8}}] gives {{{1,0,0},{3,1,0},{13,19/2,1}},{{1,2,3},{0,-2,2},{0,0,-50}},{1,2,3}}}}}
  * {{{NIntegrate}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/NIntegrate.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.html LegendreGaussIntegrator, RombergIntegrator, SimpsonIntegrator, TrapezoidIntegrator] 
    * {{{NIntegrate[(x-1)*(x-0.5)*x*(x+0.5)*(x+1),{x,0,1},Simpson] gives -0.0208333320915699}}}
  * {{{SingularValueDecomposition}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/SingularValueDecomposition.java SVN]) - [http://commons.apache.org/math/apidocs/org/apache/commons/math/linear/SingularValueDecompositionImpl.html Singular Value Decomposition]


= Java Algebra System (JAS) functions =

  * {{{Apart}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Apart.java SVN])
  * {{{Factor}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Factor.java SVN])
  * {{{GroebnerBasis}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/GroebnerBasis.java SVN])
  * {{{FactorTerms}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/FactorTerms.java SVN])
  * {{{Integrate}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Integrate.java SVN])
  * {{{NRoots}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/NRoots.java SVN])
  * {{{PolynomialGCD}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/PolynomialGCD.java SVN])
  * {{{PolynomialQ}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/PolynomialQ.java SVN])
  * {{{PolynomialQuotientRemainder}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/PolynomialQuotientRemainder.java SVN])
  * {{{Roots}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Roots.java SVN])
  * {{{RootIntervals}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/RootIntervals.java SVN])
  * {{{Solve}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Solve.java SVN]) uses {{{Roots}}} and {{{LinearSolve}}}.
  * {{{Together}}} - ([http://code.google.com/p/symja/source/browse/trunk/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system/Together.java SVN])

In the {{{edu.jas.kern.ComputerThreads}}} class the following switch lets you choose between single thread and multiple thread execution inside the JAS library:
{{{
...
        public static boolean NO_THREADS = true;
...
}}}
}}}